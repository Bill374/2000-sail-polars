#!/usr/bin/python3
'''
Rum Kist Racing NMEA2000 Logger install script.

@Author - Bill Morland
@Version 1.0

Error codes
2 - script was called with an unrecognised parameter
3 - unable to establish a connection to Github
'''

import sys
import getopt
import os
#import stat
import requests
import wget
import logging

DIRECTORY = '/opt/RKR-Logger'
BRANCH = 'master'
USAGE = 'install-RKR-Logger [-d <install directory>] [-b <Github branch>]'


# Parse the arguments passed to the script
# If any of them are not recognised exit with an error
# Since this script downloads and runs the the main-install which might need
# more parameters.  It might be better if it did not terminate for unknown
# parameters and just leave that to the main installer.
# We can make that decision later.
try:
    opts, args = getopt.getopt(sys.argv[1:], 'hd:b:', ['help'])
except getopt.GetoptError:
    logging.error('Unexpected argument.')
    logging.info(USAGE)
    sys.exit(2)

for opt, arg in opts:
    if opt in ("-h", "--help"):
        print(USAGE)
        sys.exit(0)
    elif opt == '-d':
        DIRECTORY = arg
    elif opt == '-b':
        BRANCH = arg

logging.info('*** Installing Rum Kist Racing NMEA2000 Logger ***')
logging.info('*** Start install-RKR-Logger ***')

# Check for access to Github.
# If there is no access to Github there is no point in continuing
URL = 'https://rawgithubusercontent.com'
TIMEOUT = 5
try:
    r = requests.get(URL, timeout=TIMEOUT)
except requests.ConnectionError as ex:
    logging.error('Unable to establish connection to Github.')
    logging.error(ex)
    sys.exit(3)
logging.info('Github is responding - starting installation')

# A good check to include here before executing anything else is to find out
# if this is the latest version of install-rkr-logger
# If this is not the latest version should we terminate? Fetch the
# latest version?

# Make sure we have a nice clean empty directory for our install
logging.info('Installing to directory: ' + DIRECTORY)
if os.path.isdir(DIRECTORY):
    logging.info('Installation directory already exists '
                 'deleting directory and contents.')
    os.system('rm -rf ' + DIRECTORY)
elif os.path.isfile(DIRECTORY):
    logging.info('A file that is not a directory exists with the name ' +
                 DIRECTORY + ' removing file')
    os.system('rm ' + DIRECTORY)
logging.info('Creating directory: ' + DIRECTORY)
os.system('mkdir ' + DIRECTORY)
logging.info('Change working directory to install directory')
os.chdir(DIRECTORY)
directory = os.getcwd()
logging.info('Install directory: ' + DIRECTORY)

# download the real installer that does all the work from GitHub
logging.info('Installing from Github branch: ' + BRANCH)

# Path to the Github repository
GIT_HUB_URL = ('https://raw.githubusercontent.com/Bill374/2000-sail-polars/'
               + BRANCH + '/')
logging.info('Downloading from ' + GIT_HUB_URL)

# Get the real installer
logging.info('Getting main-install script')
fileName = wget.download(GIT_HUB_URL + '/Installation/pi-install',
                         out=directory)
#logging.info('Making main-install executable by user group and world')
#st = os.stat('main-install')
#os.chmod('main-install',
#         st.st_mode | stat.S_IXUSR | stat.S_IXGRP | stat.S_IXOTH)

logging.info('Executing main-install')
#rc = os.system('./main-install -g ' + GIT_HUB_URL)

import pi_install
rc = pi_install.main(GIT_HUB_URL)

logging.info('Finished executing main-install')

if rc != 0:
    logging.error('Something went wrong in main-install')
    sys.exit(rc)

logging.info('*** End install-RKR-Logger ***')

sys.exit(0)
