#!/usr/bin/python3
'''
Rum Kist Racing NMEA2000 Logger install script.

@Author - Bill Morland
@Version 1.0

Error codes
2 - script was called with an unrecognised parameter
3 - unable to establish a connection to Github
'''
# Required for parsing command line
import sys
import getopt
# Required for accessing O/S filesystem
import os
# Required for chmod permissions
import stat
# Required for http connection and download from Github
import requests
# Required for downloading files
import wget


# Initialise installation messaging
VERBOSE = False


def log(msg):
    '''should get rid of this any use Python logger.'''
    if VERBOSE:
        print(msg)


# default directory to install the logger
DIRECTORY = '/opt/RKR-Logger'

# default Github branch to pull from
BRANCH = 'master'


# syntax for calling the installer
def usage():
    '''not sure why this is defined as a function.'''
    print('install-RKR-Logger [-v] [-d <install directory>] '
          '[-b <Github branch>] [--verbose]')


# Parse the arguments passed to the script
# If any of them are not recognised exit with an error
# Since this script downloads and runs the the main-install which might need
# more parameters.  It might be better if it did not terminate for unknown
# parameters and just leave that to the main installer.
# We can make that decision later.
try:
    opts, args = getopt.getopt(sys.argv[1:], "vhd:b:", ["verbose", "help"])
except getopt.GetoptError as err:
    # Something went wrong, found an unexpected argument
    print(err)
    print('Expected usage')
    usage()
    sys.exit(2)

for opt, arg in opts:
    if opt in ("-v", "--verbose"):
        VERBOSE = True
    elif opt in ("-h", "--help"):
        usage()
        sys.exit(0)
    elif opt == '-d':
        DIRECTORY = arg
    elif opt == '-b':
        BRANCH = arg

log('*** Installing Rum Kist Racing NMEA2000 Logger ***')
log('')
log('*** Start install-RKR-Logger ***')

# Check for access to Github.
# If there is no access to Github there is no point in continuing
URL = 'https://rawgithubusercontent.com'
TIMEOUT = 5
try:
    r = requests.get(URL, timeout=TIMEOUT)
except requests.ConnectionError as ex:
    print('Unable to establish connection to Github.')
    print(ex)
    sys.exit(3)

log('Github is responding - starting installation')

# A good check to include here before executing anything else is to find out
# if this is the latest version of install-rkr-logger
# If this is not the latest version should we terminate? Fetch the
# latest version?

# Make sure we have a nice clean empty directory for our install
log('Installing to directory: ' + DIRECTORY)
if os.path.isdir(DIRECTORY):
    log('Installation directory already exists '
        'deleting directory and contents.')
    os.system('rm -rf ' + DIRECTORY)
elif os.path.isfile(DIRECTORY):
    log('A file that is not a directory exists with the name ' +
        DIRECTORY + ' removing file')
    os.system('rm ' + DIRECTORY)
log('Creating directory: ' + DIRECTORY)
os.system('mkdir ' + DIRECTORY)
log('Change working directory to install directory')
os.chdir(DIRECTORY)
directory = os.getcwd()
log('Install directory: ' + DIRECTORY)

# download the real installer that does all the work from GitHub
log('Installing from Github branch: ' + BRANCH)

# Path to the Github repository
GIT_HUB_URL = ('https://raw.githubusercontent.com/Bill374/2000-sail-polars/'
               + BRANCH + '/')
log('Downloading from ' + GIT_HUB_URL)

# Get the real installer
log('Getting main-install script')
fileName = wget.download(GIT_HUB_URL + '/Installation/main-install',
                         out=directory)
log('')
log('Making main-install executable by user group and world')
st = os.stat('main-install')
os.chmod('main-install',
         st.st_mode | stat.S_IXUSR | stat.S_IXGRP | stat.S_IXOTH)
# execute the installer
log('Executing main-install')
log('')
if VERBOSE:
    rc = os.system('./main-install -v -g ' + GIT_HUB_URL)
else:
    rc = os.system('./main-install -g ' + GIT_HUB_URL)
log('')
log('Finished executing main-install')

if rc != 0:
    log('Something went wrong in main-install')
    sys.exit(rc)

# Clean Exit
log('*** End install-RKR-Logger ***')
sys.exit(0)
